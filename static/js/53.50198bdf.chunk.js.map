{"version":3,"file":"static/js/53.50198bdf.chunk.js","mappings":"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","sources":["api.js","components/Arrow.jsx","components/MovieCard.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e1fe80951c2b97a426dc0cdfe1eff4f3';\nconst LANG = 'language=en-US';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&${LANG}&page=${page}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?${LANG}&api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?${LANG}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?${LANG}&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","export const Arrow = () => {\n  return (\n    <svg\n      className=\"card-arrow\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 32 32\"\n    >\n      <title>arrow-left</title>\n      <path d=\"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"></path>\n    </svg>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { Arrow } from '../components/Arrow';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  const { genres, overview, poster_path, release_date, title, vote_average } =\n    movie;\n\n  const score = () => {\n    return (vote_average * 10).toFixed(1);\n  };\n\n  const year = () => {\n    return release_date.split('-')[0];\n  };\n\n  return (\n    <div className=\"card-wrapper\">\n      <Link\n        className=\"card-back-arrow\"\n        to={backLinkRef.current.state?.from ?? '/'}\n      >\n        <Arrow />\n        Go back\n      </Link>\n      <div className=\"card-details-wrapper\">\n        {movie?.release_date && (\n          <>\n            <img\n              src={`${BASE_URL}w300${poster_path}`}\n              alt={`${title} movie poster`}\n            />\n            <div>\n              <h1>\n                {title} <span>({year()})</span>\n              </h1>\n              <p>User score: {score()}%</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              {!!genres && genres.length === 0 && (\n                <>\n                  <p>Unfortunately, there is no information about genres</p>\n                </>\n              )}\n              {!!genres && genres.length > 0 && (\n                <>\n                <ul className='card-genres-list'>\n                  {genres.map(genre => {\n                    return <li key={genre.id}>{genre.name}</li>;\n                  })}\n                </ul>\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useParams, Outlet, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieDetails } from '../api';\nimport { MovieCard } from '../components/MovieCard';\nimport { Loader } from '../components/Loader';\nimport Notiflix from 'notiflix';\n\nexport default function MoviesDetailsPage() {\n  const params = useParams();\n\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setIsLoading(true);\n        const initialDetails = await fetchMovieDetails(params.movieId);\n        setMovie(initialDetails);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Oops, something went wrong, try reloading the page'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovieDetails();\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {isLoading && (\n        <>\n          <Loader />\n        </>\n      )}\n      <MovieCard movie={movie} />\n      <div className='card-add-info'>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","LANG","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","page","_context2","_x","_x2","fetchMovieDetails","_ref3","_callee3","id","_context3","_x3","fetchCast","_ref4","_callee4","_context4","_x4","fetchReviews","_ref5","_callee5","_context5","_x5","Arrow","_jsxs","className","version","xmlns","width","height","viewBox","children","_jsx","d","MovieCard","_backLinkRef$current$","_backLinkRef$current$2","movie","location","useLocation","backLinkRef","useRef","genres","overview","poster_path","release_date","title","vote_average","Link","to","current","state","from","_Fragment","src","alt","split","toFixed","length","map","genre","name","MoviesDetailsPage","params","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getMovieDetails","initialDetails","movieId","t0","Notiflix","finish","getMovieDetails","Loader","Outlet"],"sourceRoot":""}