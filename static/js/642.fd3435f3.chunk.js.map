{"version":3,"file":"static/js/642.fd3435f3.chunk.js","mappings":"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","sources":["api.js","pages/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e1fe80951c2b97a426dc0cdfe1eff4f3';\nconst LANG = 'language=en-US';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&${LANG}&page=${page}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?${LANG}&api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?${LANG}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?${LANG}&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from '../api';\nimport { Loader } from '../components/Loader';\nimport Notiflix from 'notiflix';\n\nexport default function ReviewsPage() {\n  const params = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        setIsLoading(true);\n        const initialReviews = await fetchReviews(params.movieId);\n        setReviews(initialReviews.results);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Oops, something went wrong, try reloading the page'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getReviews();\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {isLoading && (\n        <>\n          <Loader />\n        </>\n      )}\n      {reviews.length === 0 && (\n        <>\n          <p>Unfortunately, there are no reviews</p>\n        </>\n      )}\n      <ul>\n        {reviews.length > 0 && (\n          <>\n            {reviews.map(review => {\n              const { author, id, content } = review;\n              return (\n                <li key={id}>\n                  {' '}\n                  <b>{author}</b>\n                  <p>{content}</p>\n                </li>\n              );\n            })}\n          </>\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","LANG","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","page","_context2","_x","_x2","fetchMovieDetails","_ref3","_callee3","id","_context3","_x3","fetchCast","_ref4","_callee4","_context4","_x4","fetchReviews","_ref5","_callee5","_context5","_x5","ReviewsPage","params","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getReviews","initialReviews","movieId","results","t0","Notiflix","finish","getReviews","_jsxs","children","_jsx","_Fragment","Loader","length","map","review","author","content"],"sourceRoot":""}