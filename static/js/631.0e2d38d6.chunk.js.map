{"version":3,"file":"static/js/631.0e2d38d6.chunk.js","mappings":"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","sources":["api.js","pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e1fe80951c2b97a426dc0cdfe1eff4f3';\nconst LANG = 'language=en-US';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&${LANG}&page=${page}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?${LANG}&api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?${LANG}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?${LANG}&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCast } from '../api';\nimport { Loader } from '../components/Loader';\nimport Notiflix from 'notiflix';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport default function CastPage() {\n  const params = useParams();\n\n  const [cast, setCast] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchCast(params.movieId);\n        setCast(cast);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Oops, something went wrong, try reloading the page'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getCast();\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {isLoading && (\n        <>\n          <Loader />\n        </>\n      )}\n      {cast.length === 0 && (\n        <>\n          <p>Unfortunately, there is no information about cast</p>\n        </>\n      )}\n      <ul className=\"cast-list\">\n        {cast.length > 0 && (\n          <>\n            {cast.map(actor => {\n              const { character, id, name, profile_path } = actor;\n              return (\n                <li key={id}>\n                  <img\n                    src={`${BASE_URL}w200${profile_path}`}\n                    alt={`${name} portrait`}\n                  />\n                  <b>{name}</b>\n                  {character !== '' && (\n                    <>\n                      <p>Character: {character}</p>\n                    </>\n                  )}\n                </li>\n              );\n            })}\n          </>\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","LANG","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","page","_context2","_x","_x2","fetchMovieDetails","_ref3","_callee3","id","_context3","_x3","fetchCast","_ref4","_callee4","_context4","_x4","fetchReviews","_ref5","_callee5","_context5","_x5","CastPage","params","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getCast","_yield$fetchCast","_cast","movieId","t0","Notiflix","finish","getCast","_jsxs","children","_jsx","_Fragment","Loader","length","className","map","actor","character","name","profile_path","src","alt"],"sourceRoot":""}