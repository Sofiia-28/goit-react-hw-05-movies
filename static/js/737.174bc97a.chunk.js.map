{"version":3,"file":"static/js/737.174bc97a.chunk.js","mappings":"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","sources":["api.js","components/SearchBar.jsx","components/MovieList.jsx","components/Button.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e1fe80951c2b97a426dc0cdfe1eff4f3';\nconst LANG = 'language=en-US';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&${LANG}&page=${page}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?${LANG}&api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?${LANG}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?${LANG}&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","export const SearchBar = ({ onSubmit }) => {\n  return (\n    <form className=\"searchForm\">\n      <input\n        className=\"searchForm-input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n      />\n\n      <button\n        type=\"submit\"\n        className=\"searchForm-button\"\n        onClick={evt => {\n          onSubmit(evt.target.previousElementSibling.value);\n          evt.preventDefault();\n        }}\n      >\n        Search\n      </button>\n    </form>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"movies-list\">\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const Button = ({ nextPage }) => {\n  return (\n    <button onClick={nextPage} className=\"button\" type=\"button\">\n      Load More\n    </button>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from '../api';\nimport { SearchBar } from '../components/SearchBar';\nimport { MovieList } from '../components/MovieList';\nimport { Button } from '../components/Button';\nimport { Loader } from '../components/Loader';\nimport Notiflix from 'notiflix';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [showBtn, setShowBtn] = useState();\n  const [id, setId] = useState(null);\n\n  const [params, setParams] = useSearchParams('');\n  const query = params.get('query') ?? '';\n\n  useEffect(() => {\n    async function getMovie() {\n      if (query !== '') {\n        try {\n          setIsLoading(true);\n          const { results, total_pages } = await fetchMoviesBySearch(\n            query,\n            page\n          );\n          if (results.length === 0) {\n            Notiflix.Notify.failure(\n              `Oops, no movie with the title \"${query}\" was found.`\n            );\n          }\n          setShowBtn(page < Math.ceil(total_pages / 20));\n          // setMovies(prevState => [...prevState.concat(results)]);\n          setMovies(results);\n        } catch (error) {\n          Notiflix.Notify.failure(\n            'Oops, something went wrong, try reloading the page'\n          );\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    }\n    getMovie();\n  }, [query, page, id]);\n\n  const handleSubmit = newQuery => {\n    setParams({ query: newQuery });\n    setPage(1);\n    setMovies([]);\n    setId(Date.now());\n  };\n\n  const handleLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleSubmit} />\n\n      {movies.length > 0 && (\n        <>\n          <MovieList movies={movies} />\n        </>\n      )}\n      {isLoading && (\n        <>\n          <Loader />\n        </>\n      )}\n      {showBtn && (\n        <>\n          <Button nextPage={handleLoadMore} />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","LANG","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","page","_context2","_x","_x2","fetchMovieDetails","_ref3","_callee3","id","_context3","_x3","fetchCast","_ref4","_callee4","_context4","_x4","fetchReviews","_ref5","_callee5","_context5","_x5","SearchBar","onSubmit","_jsxs","className","children","_jsx","type","autoComplete","autoFocus","placeholder","onClick","evt","target","previousElementSibling","value","preventDefault","MovieList","movies","location","useLocation","map","movie","Link","to","state","from","title","Button","nextPage","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setPage","_useState7","_useState8","showBtn","setShowBtn","_useState9","_useState10","setId","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useEffect","_getMovie","_yield$fetchMoviesByS","results","total_pages","length","Notiflix","Math","ceil","t0","finish","getMovie","newQuery","Date","now","_Fragment","Loader","prevState"],"sourceRoot":""}